name: Deploy Serverless Backend

on:
  push:
    branches:
      - main
    paths:
      - '**.py'
      - 'requirements.txt'
      - 'serverless.yml'
      - 'Dockerfile'
      - '.github/workflows/deploy-backend.yml'
      - 'odbcinst.ini'

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # --- ADD THIS NEW STEP ---
      - name: Create ECR Repository if it does not exist
        env:
          ECR_REPOSITORY: nelcm-record-manager-backend
          AWS_REGION: us-east-1
        run: |
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY --region $AWS_REGION > /dev/null 2>&1 || \
          aws ecr create-repository --repository-name $ECR_REPOSITORY --region $AWS_REGION > /dev/null

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Serverless CLI
        run: npm install -g serverless@^3

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nelcm-record-manager-backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Deploy with Serverless Framework
        run: serverless deploy --param="image=${{ steps.build-image.outputs.image }}"