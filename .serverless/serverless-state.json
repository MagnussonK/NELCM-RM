{
  "service": {
    "service": "nelcm-record-manager-backend",
    "serviceObject": {
      "name": "nelcm-record-manager-backend"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.9",
      "region": "us-east-1",
      "architecture": "x86_64",
      "iam": {
        "role": "IamRoleLambdaExecution"
      },
      "httpApi": {
        "cors": true
      },
      "environment": {
        "LD_LIBRARY_PATH": "/var/task/lib",
        "ODBCSYSINI": "/var/task",
        "SQS_QUEUE_URL": {
          "Ref": "RenewalEmailQueue"
        }
      },
      "ecr": {
        "images": {
          "appimage": {
            "path": "./",
            "platform": "linux/amd64"
          }
        }
      },
      "vpc": {
        "securityGroupIds": [
          "sg-0538cfedbe5d23eb5"
        ],
        "subnetIds": [
          "subnet-06ca61fce5f705db2",
          "subnet-01ae22cae3a9c51f5"
        ]
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ApiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/nelcm-record-manager-backend-dev-api"
            }
          },
          "RenewalEmailTriggerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/nelcm-record-manager-backend-dev-renewalEmailTrigger"
            }
          },
          "SesHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/nelcm-record-manager-backend-dev-sesHandler"
            }
          },
          "EmailSenderLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/nelcm-record-manager-backend-dev-emailSender"
            }
          },
          "ApiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "ImageUri": "101067743115.dkr.ecr.us-east-1.amazonaws.com/serverless-nelcm-record-manager-backend-dev@sha256:8dcde90c62c51c14d066af8c9134d54fd4ab1f97865879b0846da4ff3227b25a"
              },
              "PackageType": "Image",
              "FunctionName": "nelcm-record-manager-backend-dev-api",
              "MemorySize": 1024,
              "Timeout": 15,
              "Architectures": [
                "x86_64"
              ],
              "Environment": {
                "Variables": {
                  "LD_LIBRARY_PATH": "/var/task/lib",
                  "ODBCSYSINI": "/var/task",
                  "SQS_QUEUE_URL": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SQS_QUEUE_URL\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "ApiLogGroup"
            ]
          },
          "ApiLambdaVersionZTdTjUKiVt9JwbACbWPMNeB5KQuIBI2J88pyTp1wSM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiLambdaFunction"
              },
              "CodeSha256": "8dcde90c62c51c14d066af8c9134d54fd4ab1f97865879b0846da4ff3227b25a"
            }
          },
          "RenewalEmailTriggerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "ImageUri": "101067743115.dkr.ecr.us-east-1.amazonaws.com/serverless-nelcm-record-manager-backend-dev@sha256:8dcde90c62c51c14d066af8c9134d54fd4ab1f97865879b0846da4ff3227b25a"
              },
              "ImageConfig": {
                "Command": [
                  "renewal_trigger.handler"
                ]
              },
              "PackageType": "Image",
              "FunctionName": "nelcm-record-manager-backend-dev-renewalEmailTrigger",
              "MemorySize": 1024,
              "Timeout": 6,
              "Architectures": [
                "x86_64"
              ],
              "Environment": {
                "Variables": {
                  "LD_LIBRARY_PATH": "/var/task/lib",
                  "ODBCSYSINI": "/var/task",
                  "SQS_QUEUE_URL": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SQS_QUEUE_URL\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "RenewalEmailTriggerLogGroup"
            ]
          },
          "RenewalEmailTriggerLambdaVersionybxgWnDDZELg955xOm0Qq5kdWwf0BVeAjSGHUtyV4Y": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RenewalEmailTriggerLambdaFunction"
              },
              "CodeSha256": "8dcde90c62c51c14d066af8c9134d54fd4ab1f97865879b0846da4ff3227b25a"
            }
          },
          "SesHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "ImageUri": "101067743115.dkr.ecr.us-east-1.amazonaws.com/serverless-nelcm-record-manager-backend-dev@sha256:8dcde90c62c51c14d066af8c9134d54fd4ab1f97865879b0846da4ff3227b25a"
              },
              "ImageConfig": {
                "Command": [
                  "ses_handler.handler"
                ]
              },
              "PackageType": "Image",
              "FunctionName": "nelcm-record-manager-backend-dev-sesHandler",
              "MemorySize": 1024,
              "Timeout": 6,
              "Architectures": [
                "x86_64"
              ],
              "Environment": {
                "Variables": {
                  "LD_LIBRARY_PATH": "/var/task/lib",
                  "ODBCSYSINI": "/var/task",
                  "SQS_QUEUE_URL": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SQS_QUEUE_URL\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "SesHandlerLogGroup"
            ]
          },
          "SesHandlerLambdaVersionvDa8aSMmZOf7URFQebjJamdWRQHqhaNOWm3cxkpw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SesHandlerLambdaFunction"
              },
              "CodeSha256": "8dcde90c62c51c14d066af8c9134d54fd4ab1f97865879b0846da4ff3227b25a"
            }
          },
          "EmailSenderLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "ImageUri": "101067743115.dkr.ecr.us-east-1.amazonaws.com/serverless-nelcm-record-manager-backend-dev@sha256:8dcde90c62c51c14d066af8c9134d54fd4ab1f97865879b0846da4ff3227b25a"
              },
              "ImageConfig": {
                "Command": [
                  "email_sender.handler"
                ]
              },
              "PackageType": "Image",
              "FunctionName": "nelcm-record-manager-backend-dev-emailSender",
              "MemorySize": 1024,
              "Timeout": 15,
              "Architectures": [
                "x86_64"
              ],
              "Environment": {
                "Variables": {
                  "LD_LIBRARY_PATH": "/var/task/lib",
                  "ODBCSYSINI": "/var/task",
                  "SQS_QUEUE_URL": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SQS_QUEUE_URL\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "EmailSenderLogGroup"
            ]
          },
          "EmailSenderLambdaVersion4B0vGyoKe6v5rihfVW0V9PgTQUJR5cZWz5uIUyXJ9A": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EmailSenderLambdaFunction"
              },
              "CodeSha256": "8dcde90c62c51c14d066af8c9134d54fd4ab1f97865879b0846da4ff3227b25a"
            }
          },
          "RenewalEmailTriggerEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(0 12 1 * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "RenewalEmailTriggerLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "renewalEmailTriggerSchedule"
                }
              ]
            }
          },
          "RenewalEmailTriggerLambdaPermissionEventsRuleSchedule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RenewalEmailTriggerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "events.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "RenewalEmailTriggerEventsRuleSchedule1",
                  "Arn"
                ]
              }
            }
          },
          "SNSTopicNelcmsesevents": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
              "TopicName": "nelcm-ses-events",
              "Subscription": [
                {
                  "Endpoint": {
                    "Fn::GetAtt": [
                      "SesHandlerLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Protocol": "lambda"
                }
              ]
            }
          },
          "SesHandlerLambdaPermissionNelcmseseventsSNS": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SesHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "sns.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":sns:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    "nelcm-ses-events"
                  ]
                ]
              }
            }
          },
          "EmailSenderEventSourceMappingSQSRenewalEmailQueue": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 5,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "RenewalEmailQueue",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "EmailSenderLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-nelcm-record-manager-backend",
              "ProtocolType": "HTTP",
              "CorsConfiguration": {
                "AllowHeaders": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "AllowMethods": [
                  "OPTIONS",
                  "GET",
                  "POST",
                  "PUT",
                  "PATCH",
                  "HEAD",
                  "DELETE"
                ],
                "AllowOrigins": [
                  "*"
                ]
              }
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "ApiLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ApiLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationApi": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteAnyApiProxyVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "ANY /api/{proxy+}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationApi"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationApi"
          },
          "RenewalEmailQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "nelcm-record-manager-backend-dev-renewal-email-queue"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "nelcm-record-manager-backend-dev-lambda-role",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ],
              "Policies": [
                {
                  "PolicyName": "nelcm-record-manager-backend-dev-lambda-policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "secretsmanager:GetSecretValue"
                        ],
                        "Resource": "arn:aws:secretsmanager:us-east-1:*:secret:nelcm-db-*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "ses:SendEmail",
                          "ses:SendRawEmail"
                        ],
                        "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:SendMessage",
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": {
                          "Fn::GetAtt": [
                            "RenewalEmailQueue",
                            "Arn"
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "DependsOn": [
              "RenewalEmailQueue"
            ]
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-173d1e7a-4a2e",
            "Export": {
              "Name": "sls-nelcm-record-manager-backend-dev-ServerlessDeploymentBucketName"
            }
          },
          "ApiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiLambdaVersionZTdTjUKiVt9JwbACbWPMNeB5KQuIBI2J88pyTp1wSM"
            },
            "Export": {
              "Name": "sls-nelcm-record-manager-backend-dev-ApiLambdaFunctionQualifiedArn"
            }
          },
          "RenewalEmailTriggerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RenewalEmailTriggerLambdaVersionybxgWnDDZELg955xOm0Qq5kdWwf0BVeAjSGHUtyV4Y"
            },
            "Export": {
              "Name": "sls-nelcm-record-manager-backend-dev-RenewalEmailTriggerLambdaFunctionQualifiedArn"
            }
          },
          "SesHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SesHandlerLambdaVersionvDa8aSMmZOf7URFQebjJamdWRQHqhaNOWm3cxkpw"
            },
            "Export": {
              "Name": "sls-nelcm-record-manager-backend-dev-SesHandlerLambdaFunctionQualifiedArn"
            }
          },
          "EmailSenderLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EmailSenderLambdaVersion4B0vGyoKe6v5rihfVW0V9PgTQUJR5cZWz5uIUyXJ9A"
            },
            "Export": {
              "Name": "sls-nelcm-record-manager-backend-dev-EmailSenderLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-nelcm-record-manager-backend-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-nelcm-record-manager-backend-dev-HttpApiUrl"
            }
          }
        }
      }
    },
    "pluginsData": {},
    "functions": {
      "api": {
        "image": "appimage",
        "timeout": 15,
        "events": [
          {
            "httpApi": {
              "path": "/api/{proxy+}",
              "method": "any"
            },
            "resolvedMethod": "ANY",
            "resolvedPath": "/api/{proxy+}"
          }
        ],
        "name": "nelcm-record-manager-backend-dev-api",
        "package": {},
        "memory": 1024,
        "vpc": {},
        "versionLogicalId": "ApiLambdaVersionZTdTjUKiVt9JwbACbWPMNeB5KQuIBI2J88pyTp1wSM"
      },
      "renewalEmailTrigger": {
        "image": {
          "name": "appimage",
          "command": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RenewalEmailTriggerLambdaFunction\"][\"Properties\"][\"ImageConfig\"][\"Command\"]"
          }
        },
        "events": [
          {
            "schedule": "cron(0 12 1 * ? *)"
          }
        ],
        "name": "nelcm-record-manager-backend-dev-renewalEmailTrigger",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "RenewalEmailTriggerLambdaVersionybxgWnDDZELg955xOm0Qq5kdWwf0BVeAjSGHUtyV4Y"
      },
      "sesHandler": {
        "image": {
          "name": "appimage",
          "command": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SesHandlerLambdaFunction\"][\"Properties\"][\"ImageConfig\"][\"Command\"]"
          }
        },
        "events": [
          {
            "sns": "nelcm-ses-events"
          }
        ],
        "name": "nelcm-record-manager-backend-dev-sesHandler",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "SesHandlerLambdaVersionvDa8aSMmZOf7URFQebjJamdWRQHqhaNOWm3cxkpw"
      },
      "emailSender": {
        "image": {
          "name": "appimage",
          "command": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"EmailSenderLambdaFunction\"][\"Properties\"][\"ImageConfig\"][\"Command\"]"
          }
        },
        "timeout": 15,
        "events": [
          {
            "sqs": {
              "arn": {
                "Fn::GetAtt": [
                  "RenewalEmailQueue",
                  "Arn"
                ]
              },
              "batchSize": 5
            }
          }
        ],
        "name": "nelcm-record-manager-backend-dev-emailSender",
        "package": {},
        "memory": 1024,
        "vpc": {},
        "versionLogicalId": "EmailSenderLambdaVersion4B0vGyoKe6v5rihfVW0V9PgTQUJR5cZWz5uIUyXJ9A"
      }
    },
    "resources": {
      "Resources": {
        "RenewalEmailQueue": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "nelcm-record-manager-backend-dev-renewal-email-queue"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "RoleName": "nelcm-record-manager-backend-dev-lambda-role",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "ManagedPolicyArns": [
              "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
            ],
            "Policies": [
              {
                "PolicyName": "nelcm-record-manager-backend-dev-lambda-policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "secretsmanager:GetSecretValue"
                      ],
                      "Resource": "arn:aws:secretsmanager:us-east-1:*:secret:nelcm-db-*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "ses:SendEmail",
                        "ses:SendRawEmail"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "sqs:SendMessage",
                        "sqs:ReceiveMessage",
                        "sqs:DeleteMessage",
                        "sqs:GetQueueAttributes"
                      ],
                      "Resource": {
                        "Fn::GetAtt": [
                          "RenewalEmailQueue",
                          "Arn"
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "DependsOn": [
            "RenewalEmailQueue"
          ]
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "service": "nelcm-record-manager-backend",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "appId": null,
    "orgId": null,
    "layers": {}
  },
  "package": {
    "artifactDirectoryName": "serverless/nelcm-record-manager-backend/dev/1753476717740-2025-07-25T20:51:57.740Z",
    "artifact": ""
  }
}